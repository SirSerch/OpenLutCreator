const main = require('electron').remote.getCurrentWindow().setProgressBar(0.5);

function createHald(lutSize) {
    var haldSize = Math.round(Math.pow(Math.pow(lutSize, 3), 0.5));
    var hald = document.createElement("canvas");
    hald.width = haldSize;
    hald.height = haldSize;
    var haldData = hald.getContext("2d");
    let r, g, b = g = r = 0;
    let progress = 1;
    for (let y = 0; y < hald.height; y++) {
        for (let x = 0; x < hald.width; x++) {
            function value(color) {
                return Math.round((255 / (lutSize - 1)) * color)
            }
            if (r >= lutSize) {
                r = 0
                g += 1
            }
            if (g >= lutSize) {
                g = 0
                b += 1
            }
            haldData.fillStyle = "rgb(" + value(r) + "," + value(g) + "," + value(b) + ")";
            haldData.fillRect(x, y, 1, 1);
            r += 1
            progress++;
        }
    }
    var link = document.createElement('a');
    link.download = "hald_" + lutSize + ".png";
    link.href = hald.toDataURL("image/png");
    link.click();
}

function exportCube(lutSize) {
    var hald = document.createElement('canvas');
    var haldData = hald.getContext('2d');
    var selectHald = document.createElement('input');

    selectHald.type = 'file';
    selectHald.click();

    selectHald.onchange = function (e) {
        let fileName = selectHald.files[0].name.substr(0, selectHald.files[0].name.lastIndexOf('.'));
        let reader = new FileReader();
        reader.onload = () => {
            let imageHald = new Image();
            imageHald.onload = () => {
                hald.width = imageHald.width;
                hald.height = imageHald.height;
                haldData.drawImage(imageHald, 0, 0);

                var txtCube = '#Generated by OpenLutGenerator by SirSerch\n';
                txtCube += '#Website: openlutgenerator.sirserch.io'
                txtCube += 'TITLE '+fileName+'\n\n';
                txtCube += '#LUT Size\n';
                txtCube += 'LUT_3D_SIZE ' + lutSize + '\n\n';

                for (let y = 0; y < hald.height; y++) {
                    for (let x = 0; x < hald.width; x++) {
                        var r = (haldData.getImageData(x, y, 1, 1).data[0] / 255).toFixed(6);
                        var g = (haldData.getImageData(x, y, 1, 1).data[1] / 255).toFixed(6);
                        var b = (haldData.getImageData(x, y, 1, 1).data[2] / 255).toFixed(6);
                        txtCube += r + " " + g + " " + b + "\n";
                    }
                }
                var exportCube = document.createElement('a');
                var file = new Blob([txtCube], {type: 'text/plain'});
                exportCube.href = URL.createObjectURL(file);
                exportCube.download = fileName + '.cube';
                exportCube.click();
                
            }
            imageHald.src = reader.result
            console.log(imageHald.src);
        }
        reader.readAsDataURL(selectHald.files[0]);
    }
}